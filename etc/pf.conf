lan = "trunk0"
guest = "vlan130"
wan ="pppoe0"

icmp6_types = "{ echoreq, unreach, timex, paramprob, \
                 routeradv, routersol, neighbradv, neighbrsol }"
# allow proper pings, traceroutes and path mtu discovery
icmp_types = "{ echoreq, unreach }"

# from https://www.geoghegan.ca/pfbadhost.html
table <pfbadhost> persist file "/etc/pf-badhost.txt"
table <martians> const { \
      0.0.0.0/8, 10.0.0.0/8, 100.64.0.0/10, 127.0.0.0/8, \
      169.254.0.0/16, 172.16.0.0/12, 192.0.0.0/24, 192.0.2.0/24, \
      192.168.0.0/16, 198.18.0.0/15, 198.51.100.0/24, \
      203.0.113.0/24, 240.0.0.0/4, 255.255.255.255/32, \
      ::1/128, ::/128, ::/96, ::ffff:0:0/96, 100::/64, \
      2001::/32, 2001:2::/48, 2001:db8::/32, fc00::/7, fe80::/10 \ }

set block-policy return
set loginterface egress
# ignore loopbacks on all rdomains
set skip on lo0
set skip on lo2

# todo: more queues
queue inq on $wan flows 1024 bandwidth 10M max 20M qlimit 1024 default
queue outq on $lan flows 1024 bandwidth 10M max 20M qlimit 1024 default

# scrub, esp for pppoe + bridge
match in all scrub (no-df random-id max-mss 1440)

# Allow IPv6 out
pass out quick on egress inet6 from $lan

# NAT with the two priority speedup trick
match out on egress inet from ($lan:network) to any nat-to (egress:0) set prio(5,6) tag "WAN OUT"
# NAT via the vpn
match out on rdomain 2 from ($guest:network) to any nat-to (tun0:0) rtable 2 tag "VPN OUT"

antispoof quick for { egress }

block in quick on egress from <martians> to any
block return out quick on egress from any to <martians>
block in quick on egress from <pfbadhost> to any
block out quick on egress from any to <pfbadhost>
block all
pass out quick
pass in on { $lan, $guest }

# allow dhcpv6
pass in quick on egress inet6 proto udp from fe80::/64 \
                        port dhcpv6-server to fe80::/64 port dhcpv6-client

# torrent port fwd
pass in on egress proto { tcp, udp } from any to any port 51413 \
                        rdr-to 192.168.0.115 set prio (3,4)
# wireguard port fwd
pass in on egress proto udp from any to any port 51820 \
                        rdr-to 192.168.0.110 set prio (5,6)
# Allow ping (IPv4)
pass in quick on egress inet proto icmp icmp-type $icmp_types

# Allow ping (IPv6), ND, RA et alli
pass quick on egress inet6 proto icmp6 icmp6-type $icmp6_types

# Allow traceroutes
pass out on egress proto udp to egress port 33433 >< 33626


